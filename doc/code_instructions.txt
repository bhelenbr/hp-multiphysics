# See HowTo for basis unix stuff

# Packages to be installed
1 blitz array library
2 muParser math parsing library
3 libbinio platform independent binary input/ouput
4 metis for mesh partitioning
5 pth for user space threading (multiple blocks running under 1 process)
6 boost for system space threading (usually not used)
7 parseargs for command line argument processing
8 cfortran for c calls to fortran
9 petsc for parallel matrix inversion and iteration
10 MeshAdapt for tetrahedral mesh generation
11 Gmsh for tetrahedrals
12 valgrind for debugging
13 probably need to install cmake (gui installer for OS X & Windows)

###################################################################
#### GET BLITZ ####
###################################################################
METHOD 1 - using CVS to download
	[mkdir Packages]
	[cd Packages]
	[export CVSROOT=:pserver:anonymous@blitz.cvs.sourceforge.net:/cvsroot/blitz]
	[cvs login]  (hit return for password)
	[cvs -z3 checkout blitz]
	[cd blitz]
	[autoreconf -vif]
	[./configure -disable-fortran --prefix=$HOME/Packages CXX=c++]
	[make lib]
	[make install]
	[make pdf] (to make pdf instructions in blitz/doc)
(
if you get an error after 'make lib' saying " 'labs' is not included in 'std'", do the following:
	[nano blitz/func.h]
at the top of the file that has the error
	[#include <cstdlib>]
at the line where the error occured in this same file, change
	"{ return BZ_MATHFN_SCOPE(labs)(a); }"
to
	"{ return (labs)(a); }"
(NOTE: 'labs' may be written as 'abs' or 'fabs'; keep it as whichever version it was originally in, just delete 'BZ_MATHFN_SCOPE')
)

( 
To eliminate warnings:
change blitz/array/reduce.h 181
add "return T_numtype();"
change blitz/indexexpr.h 158
add "return T_numtype();"
)

##################################################################
#### GET OPENMPI IF NOT INSTALLED (LION) ####
###################################################################
http://www.open-mpi.org/
Download button, current version openmpi-1.4.4.tar.gz
Put in Packages directory
tar zxvf openmpi-1.4.4.tar.gz
./configure --prefix=${HOME}/Packages
make all install

###################################################################
######### MATH PARSING LIBRARY ##################
###################################################################
Download muParser v2_2_2 (most recent) at 
	http://muparser.sourceforge.net/

Replace XX with version number in following.
move it to the Packages folder
while in the Downloads folder,
	[mv muparser_vXX.tar ../Packages]
go to the Packages folder
	[cd ../Packages]
extract, configure 
	[tar zxvf muparser_vXX.tar]
	[cd muparser]
	[./configure --prefix=${HOME}/Packages]
	[make]
	[make install]

###################################################################
######### PLATFORM INDEPENDENT BINARY I/O LIBRARY #################
###################################################################

Download libbinio v1.27 (most recent) at
	http://sourceforge.net/projects/libbinio
move libbinio-1.4.tar.bz2 to Packages
unzip, configure
	[tar --use-compress-program bzip2 -xvf libbinio-1.4.tar.bz2]
	[cd libbinio-1.4]
	[./configure --prefix=${HOME}/Packages]
For intel compilers had to disable shared library (skip this line)
	[./configure --prefix=${HOME}/Packages --enable-shared=no --enable-fast-install=no] 
	[make]
	[make install]
	[cd ..]

libbinio may have an error in it and you will have to add 
#include <cstdio> to binwrap.cpp


###################################################################
######### MESH PARTITIONING LIBRARY #############
###################################################################

Download PMETIS (5.02 most recent) at
	http://glaros.dtc.umn.edu/gkhome/metis/metis/download
move metis-5.0.2.tar to Packages
	[tar xvf metis-5.0.2.tar]
	[cd metis-5.0.2]
## READ Install.txt
	modify include/metis.h IDXTYPE to 64
###
	make config shared=1 prefix=${HOME}/Packages
	make
	make install

###################################################################
######## USER SPACE THREADS LIBRARY #############
###################################################################

Download Pth (2.0.7 is most recent) at
	http://www.gnu.org/software/pth/
move pth-2.0.7.tar.gz to Packages
	[tar zxvf pth-2.0.7.tar.gz]
	[cd pth-2.0.7]
	[./configure --prefix=${HOME}/Packages --enable-shared=no --enable-optimize]
	[make]
	[make install]
	[cd ..]


###################################################################
####### SYSTEM SPACE THREADS LIBRARY #############
###################################################################
# SKIP THIS
Download Boost at
	http://www.boost.org/
unpack in packages folder (see index.html file for instructions)
	[tar zxvf boost_1_48_0.tar.gz]
	[cd boost_1_48_0]
	[./bootstrap.sh --with-libraries=thread --prefix=${HOME}/Packages]
	[./b2 install]
	[cd ..]


###################################################################
### COMMAND LINE ARGUMENT PARSING UTILITY ##########
###################################################################
# get parseargs from Brian
	[cd parseargs]
	[make]
	[cd ..]

###################################################################
### HEADER FOR C to CALL FORTRAN ROUTINES ###########
###################################################################
http://www-zeus.desy.de/~burow/cfortran/
save cfortran.h to ${HOME}/Packages/include/

###################################################################
#### (VALGRIND ONLY FOR DEBUGGING) ####
###################################################################
# download valgrind from web
./configure --prefix=/share/apps
./configure --prefix=${HOME}/Packages --with-mpicc=${HOME}/Packages/bin/mpicc
make
make install

or from svn
svn co svn://svn.valgrind.org/valgrind/trunk valgrind
./autogen.sh
./configure --prefix=${HOME}/Packages --with-mpicc=${HOME}/Packages/bin/mpicc
make
make install

###################################################################
######## FOR PETSC ############
###################################################################
download current version at
	http://www.mcs.anl.gov/petsc/petsc-as/download/index.html
move to Packages, extract
	[mv petsc-3.0.0-p10 ../Packages]
	[cd petsc-3.0.0-p10]
	[tar zxvf petsc-3.0.0-p10]

# To know what packages are available: ./config/configure.py --help
# with superlu
# ON LION
./config/configure.py --prefix=${HOME}/Packages --with-fortran=0  --download-superlu_dist=1 --with-x=0 --download-parmetis=1 --download-metis=1 --with-mpi-dir=${HOME}/Packages --with-valgrind-dir=${HOME}/Packages
# ON SNOW LEOPARD
./config/configure.py --prefix=${HOME}/Packages --with-fortran=0  --download-superlu_dist=1 --with-x=0 --download-parmetis=1 --with-mpi-include=/usr/include --with-mpi-lib=libmpi
# with out downloading parmetis
./config/configure.py --prefix=${HOME}/Packages --with-fortran=0 --with-mpi-include=/usr/include --with-mpi-lib=libmpi --download-superlu_dist=1 --with-x=0 --with-parmetis-include=${HOME}/Packages/include  --with-parmetis-dir=${HOME}/Packages/ParMetis-3.1
# on cluster
./config/configure.py --prefix=/export/apps --with-fortran=0 --with-x=0 --download-superlu_dist=1  --with-mpi-dir=/opt/mpich/myrinet/gnu/ --with-parmetis-dir=/export/apps
./config/configure.py --prefix=/export/apps --with-fortran=0 --with-x=0 --download-superlu_dist=1  --with-mpi-dir=/opt/openmpi --with-parmetis-dir=/export/apps  --with-valgrind-dir=/share/apps

# READ & COPY OUTPUT TO KNOW WHAT TO DO NEXT. IT SHOULD BE SOMETHING LIKE THIS:
make PETSC_DIR=/Users/bhelenbr/Packages/petsc-3.1-p3 PETSC_ARCH=darwin10.3.1-c-debug ala
make PETSC_DIR=/Users/bhelenbr/Packages/petsc-3.1-p3 PETSC_ARCH=darwin10.3.1-c-debug installPETSC_DIR=/Users/helenbrk/Packages;
make PETSC_DIR=/Users/bhelenbr/Packages test



###################################################################
##### MeshAdapt for Tetrahedral Meshing Stuff      ################
###################################################################
#### FOR TETRAHEDRAL CODE, DO THIS HERE ####
#### NOT NECESSARY FOR 2D CODE ###
#### (FOR TETS ONLY) FOR MADLIB ####
(NEED PASSWORD FROM BRIAN)
	[svn co https://svn.cenaero.be/MAdLib/trunk MAdLib]
	[cd MAdLib]
	Read README
	[mkdir build; cd build]


	## USE CCMAKE TO CHANGE INSTALL OPTIONS
	## ON CLUSTER:
	export CMAKE_PREFIX_PATH=/export/apps:/export/apps/lib:/export/apps/include:/opt/openmpi
	[../../cmake-2.8.4-Linux-i386/bin/ccmake .]
	Hit t to toggle expert mode.

	## ON MAC
	export CMAKE_PREFIX_PATH=${HOME}/Packages
        ## ON MAC CAN USE CMAKE GUI TO CHANGE OPTION
	# Set source directory to Packages/MAdLib
	# Set build directory to Packages/MAdLib/build

	## CHANGE CMAKE_INSTALL_PREFIX to Packages
	## CHANGE EXTENDED_API TO YES (find correct checkbox)
	## Change BUILD DOXYGEN
	Also, looks for a PLATFORM variable, the files are in cmake/platforms

	[cmake ..]
	[make depend]
	[make -j 2]
	[make install]

	# Need to move the include_all/MAdLib folder and replace the one in include


###################################################################
#### (FOR TETS ONLY) FOR GMSH ####
###################################################################
Download at http://www.fltk.org/software.php
move to Packages
	[tar zxvf fltk-1.1.9-source.tgz]
	[rm fltk-1.1.9-source.tgz]
	[cd fltk-1.1.9]
	[./configure --prefix=${HOME}/Packages]
	[make]
	[make install]
	[cd zlib]
	[make]
	[make install]
	[cd ../..]
FOR GMSH
	[svn checkout https://geuz.org/svn/gmsh/trunk gmsh]
For read-only access, simply use login=gmsh, password=gmsh.
	[cd gmsh]
	[svn update]

For commits (me only, login=brianh password=hb4519)
In CMAKE:
	[CMAKE_INSTALL_PREFIX ${HOME}/Packages]
	[CMAKE_PREFIX_PATH ${HOME}/Packages]
	[FLTK_DIR ${HOME}/Packages/fltk-1.3x...]
	[ENABLE_GRAPHICS]

###################################################################
NOW DOWNLOAD MY CODE
###################################################################
[cd]
[mkdir bin] # (if not already there)
[mkdir Codes]
[cd Codes]
[mkdir include lib] # (if not already there)
[svn co https://balrog.camp.clarkson.edu/Repository/Codes .]

# Need to update this to git repository. svn repository is dead.
"ssh-keygen" (Hit return twice, i.e. use no passphrase)
"cd ~/.ssh"
"cat id_rsa.pub > ~/Desktop/id.txt"
send id.txt file on desktop to Brian so he can give you access to repository

now get all of my stuff:
git clone ssh://git@balrog.camp.clarkson.edu/~/GitRepo Codes

###################################################################	
#### UNIX ####
# On cares modify your ~/.bash_profile file in your home directory by 
# adding the location of the packages directory:
# On cluster:
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/share/apps/lib
export PACKAGES=/export/apps
# For Linux:
export PACKAGES=/${HOME}/Packages
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PACKAGES/lib

After making these changes 
type
". .bash_profile"
To load the new environment variables

# you may have to monkey with the makefiles to change
# blas & lapack libraries, as well as mpic++ location 
# and directory of mpi.h include.  
# This are in the individual directories.  
# For mpi it is mainly the tri_mesh and tri_hp directories
# for boas stuff it is the tri_basis makefile and maybe
# tri_hp as well.
# Sometimes superLU changes its version number which messes everything up
# you will have to change the number to match in the tri_hp makefile

# Other things is that getnewblock.cpp in tri_hp and 
# the makefile have to compile the same classes.
# if you have virtual functions undefined, check this


make -j 2 tri_hp (For 2 processor machine)
or to do everything including 3D stuff too
make -j 2  

###################################################################

###################################################################
#### OS X ####
###################################################################
	[cd ${HOME}/Codes]
	[cd utilities]
	[xcodebuild -alltargets -configuration Release]
	[cd ../quadtree]
	[xcodebuild -alltargets -configuration Release]
	[cd ../spline++]
	[xcodebuild -alltargets  -configuration Release]
	[cd ../input_map]
	[xcodebuild -alltargets  -configuration Release]
	[cd ../symbolic_function]
	[xcodebuild -alltargets  -configuration Release]
	[cd ../tri_mesh]
	[xcodebuild -alltargets -configuration Release]
	[cd ../tri_basis]
	[xcodebuild -alltargets -configuration Release]
	[cd ../tri_hp]
	[xcodebuild -alltargets -configuration Release]
###################################################################


#################################################
# IF DESIRED, NOT NECESSARY                     #
# TO MAKE MESH & INPUT FILE GRAPHICAL UTILITIES #
# Get from Brian				#
#################################################
cd 

tar zxvf util.tgz

# For showmesh,showgrid X11 application

cd ${HOME}/Codes/Cocoa/easymesh

./compile.command

# For input.app application (OS X only) 

cd ../inputwfind

xcodebuild -configuration Deployment

