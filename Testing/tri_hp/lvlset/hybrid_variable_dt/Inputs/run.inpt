# sets the polynomial order of the basis (use 2): 
log2p: 2
# extra levels for p multigrid (usually same as log2p): 
extra_finest_levels: 2
# number of geometric multigrid levels: 
ngrid: 1
# iterations on coarsening/refinement in multigrid cycle: 
itercrsn: 2
iterrfne: 2
# number of iterative multigrid cycles per time step: 
ncycle: 100
# relative cut-off for iteration (set negative for no cut-off): 
relative_tolerance: 1.0e-4
# absolute cut-off for iteration (set negative for no cut-off): 
#absolute_tolerance: -1.0e-12
# v or w multigrid cycle (1 or 2): 
vwcycle: 2
# Ratio of spatial to temporal error: 
Er: 0.01
# Inverse of time step: 
dtinv: ntstep
# This formula comes by setting the ratio between spatial and temporal error: 
# Temporal error = d^3u/dt^3 dt^3 where derivative = (2pi)^3: 
# Spatial error = d^(p+1)u/dx^(p+1) dx^(p+1) where derivative = (2pi)^(p+1): 
# Solve for dtinv then divide by 3 for multi-step runge-kutta scheme: 
ntstep: rint((Er*(2*_pi)^2*(1.0/(ngrid*(2^log2p)))^(2^log2p+1))^(-1/3)/3)+1
#gravity: 1.0
# flag for mesh adaptation: 
#adapt: 1
# Truncation error target for mesh adaptation: 
#error: 1.0e-6
# Start from previous time step: 
#restart: 15
#output_interval: 5
# Restart interval (multiplied by output interval): 
restart_interval: 1000
# Turn this on to output files during iteration process: 
#debug_output: 1
# Turn this on to output files during adaptation process: 
#adapt_output: 1
# Name of file for output: 
logfile: out
# Number of mesh blocks for each processor: 
nblock: 3
# Mesh movement type: fixed, (un)coupled_rigid, (un)coupled_deformable
mesh_movement: coupled_deformable
# Default initial condition for all blocks (can be overridden block by block)
# ibcN is initial condition for the nth variable
# Variable for incompressible flow with heat transfer are u,v,T,p: 
b0_ibc: symbolic
b0_ibc0: 1.0
b0_ibc1: 0.0
b0_ibc2: 0.0
# Physics type of block: 
b0_type: ins
# Input mesh filetype
# easymesh=0, gambit=1, tecplot=2, grid=3, text=4, binary=5, boundary=8: 
b0_filetype: 3
# Factor to increase memory allocation for mesh adaptation: 
b0_growth factor: 10.0
# Name of mesh without extension: 
b0_mesh: ./botleft1
# Some physical parameters: 
b0_rho: 1.0
b0_mu: 1.0e-2
# Boundary side specifications
# This is the underlying mesh type used for a free-surface: 
b0_s2_type: prdc
b0_s3_hp_type: inflow
b0_s7_type: comm
b0_s7_r_type: fixed
b0_s7_r_dir: 0 0
b0_s5_type: coupled_symbolic_comm
b0_s5_h: x1-A*sin(2.*_pi*x0)
b0_s5_dhdx0: -A*2.*_pi*cos(2.*_pi*x0)
b0_s5_dhdx1: 1.0
b0_s5_norm: (x1 -A*sin(2.*_pi*(x0-t)))^2
b0_s5_hp_type: surface
b0_s5_matching_block: b1
b0_s5_report: 1
#b0_s5_cfltangent: 0.0 0.0 0.0
#b0_s5_cflnormal: 0.0 0.0 0.0
b0_s5_sigma: 0.0
# Block 1 information: 
b1_type: ins
b1_ibc: symbolic
b1_ibc0: 1.0
b1_ibc1: 0.0
b1_ibc2: 0.0
b1_filetype: 3
b1_growth factor: 10.0
b1_mesh: ./topleft1
b1_rho: b0_rho
b1_mu: b0_mu
b1_s5_type: coupled_symbolic_comm
b1_s5_h: x1-A*sin(2.*_pi*x0)
b1_s5_dhdx0: -A*2.*_pi*cos(2.*_pi*x0)
b1_s5_dhdx1: 1.0
b1_s5_hp_type: surface_slave
b1_s6_type: comm
b1_s6_r_type: fixed
b1_s6_r_dir: 0 0
b1_s1_type: prdc
b1_s3_hp_type: outflow
b2_type: lvlset
#b2_reinit_iterations: 10
b2_helper: output_contour
b2_norm: (x1 -A*sin(2.*_pi*(x0-t)))^2
b2_var: 2
b2_ibc: symbolic
b2_ibc0: 1.0
b2_ibc1: 0.0
b2_ibc2: x1-A*sin(2.*_pi*x0)
b2_ibc3: 0.0
b2_filetype: 3
b2_growth factor: 10.0
b2_mesh: ./right1
b2_rho: b0_rho
b2_mu: b0_mu
b2_rho2: b0_rho
b2_mu2: b0_mu
b2_sigma: b0_s5_sigma
#b2_width: 0.1
b2_s6_type: comm
b2_s6_hp_type: hybrid
b2_s6_r_type: fixed
b2_s6_r_dir: 0 0
b2_s7_type: comm
b2_s7_hp_type: hybrid
b2_s7_r_type: fixed
b2_s7_r_dir: 0 0
b2_s8_hp_type: inflow
b2_s11_hp_type: outflow
b2_s1_type: prdc
b2_s1_hp_type: hybrid
b2_s2_type: prdc
b2_s2_hp_type: hybrid
A: 0.025
# THESE WON'T TRY TO COMMUNICATE FOR THE INTERFACE: 
# BECAUSE THEY AREN'T IN THE MANIFOLD GROUP: 
b0_v1_type: comm
b1_v1_type: comm
b2_v1_type: comm
b0_v1_r_type: fixed
b1_v1_r_type: fixed
b2_v1_r_type: fixed
b0_v1_hp_type: hybrid_point
b1_v1_hp_type: hybrid_slave_point
b2_v1_hp_type: hybrid_point
b0_v2_type: prdc
b1_v2_type: prdc
b2_v2_type: prdc
b0_v2_r_type: fixed
b1_v2_r_type: fixed
b2_v2_r_type: fixed
b0_v2_hp_type: hybrid_point
b1_v2_hp_type: hybrid_slave_point
b2_v2_hp_type: hybrid_point
#UNCOMMENT THESE TO GENERATE MESH: 
#ntstep: 2
#adapt: 1
#b0_filetype: 8
#b1_filetype: 8
#b2_filetype: 8
#b0_growth factor: 1000.0
#b1_growth factor: 1000.0
#b2_growth factor: 1000.0
#b0_s5_type: symbolic_comm
#b1_s5_type: symbolic_comm
