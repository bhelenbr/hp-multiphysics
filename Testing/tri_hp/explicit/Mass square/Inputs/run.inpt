# Sets log_2(p) for the basis: 
log2p: 2
# Sets the number of time steps: 
ncycle: 10
# Makes a simple 1 step explicit time advancement scheme: 
nstage: 1
alpha: 1.0
beta: 1.0
time_scheme: 1
# Sets the cfl for the scheme: 
# only the first entry matters: 
cfl: 1.0 1.0 1.0 1.0
# Set the ouput interval here: 
#debug_output: 1
# This shuts off automatic termination of  the simulation when the residual hits this value: 
absolute_tolerance: -1.0
# Name of the logfile: 
logfile: output
# Implicit time step (can be used to add a dtinv*T term to the equations: 
dtinv: 1.0
# This adds a helper that calculates the norm of the difference between the soution and the ibc0 function: 
helper: l2error
#Initial and boundary condition function: 
ibc: symbolic
ibc0: (t > 0.0 ? sin(2.*_pi*x0) : 0.0)
src: symbolic
src0: sin(2.*_pi*x0)
b0_type: explicit
# Set diffusivity and convective velocities if you want them: 
nu: 0.0
ax: 0.0
ay: 0.0
sigma: 1.0
# The name of the mesh: 
b0_mesh: ./square4
# For each boundary set type: 
# Boundaries are number ccw from bottom: 
# 0 is essential 1 is natural: 
b0_s1_hp_type: plain
b0_s1_hp_typelist: 1
b0_s2_hp_type: plain
b0_s2_hp_typelist: 1
b0_s3_hp_type: plain
b0_s3_hp_typelist: 1
b0_s4_hp_type: plain
b0_s4_hp_typelist: 1
