#polynomial order: 
log2p: 0
#petsc command line args: 
petsc: -ksp_type preonly -pc_type lu -pc_factor_mat_solver_type mumps
#Number of iterative cycles: 
ncycle: 30
debug_output: 0
rsdl_debug: 0
#Iterative tolerances: 
absolute_tolerance: 1.0e-7
relative_tolerance: 5.0e-7
#under_relaxation: 0.5
#Number of time steps: 
ntstep: 1000
#Inverse time step: 
dtinv: (cu+uu)*20
time_scheme: 1
# Name of file for output: 
logfile: output
# Number of mesh blocks for each processor: 
nblock: 1 1
# flag for mesh adaptation: 
adapt: 1
# Factor to increase memory allocation for mesh adaptation: 
growth factor: 10
#Physical properties: 
blocktype: cns
mesh_movement: coupled_deformable
#mu: 0.0013364
#mu: 6.682e-4
mu: 2e-3
#mu: 0
prandtl: 0.7
#prandtl: 1
# Initial and boundary condition function: 
#M: 17.636
#M: 3
M: 10
gamma: 1.4
rhou: 1.4
#uu: 17.636
#uu: 3
uu: 10
vu: 0
cu: uu/M
RTu: cu^2/gamma
pu: rhou*RTu
b0_ibc: symbolic
#Upstream props: 
b0_ibc0: pu
b0_ibc1: uu
b0_ibc2: vu
b0_ibc3: RTu
# Name of mesh: 
b0_mesh: rstrt1_b0.grd
# Side type specifiers: 
b0_s1_hp_type: inflow
b0_s2_hp_type: characteristic
b0_s2_r_dir: 0 0
b0_s3_type: coupled_symbolic_comm
b0_s3_h: x0-1.25-0.5*x1^2
b0_s3_dhdx0: 1
b0_s3_dhdx1: -x1
b0_s3_hp_type: shock
b0_s4_hp_type: characteristic
b0_s4_r_dir: 0 0
b0_s5_hp_type: inflow
b0_s6_hp_type: inflow
#Downstream Props: 
r: sqrt((x0-2)^2+x1^2)
xwall: 8.0
R: 0.5
ct: ((x0-2)/r < ct_exit ? (x0-2)/r : ct_exit )
st: sqrt(1-ct^2)
r_exit: sqrt(17.5+xwall^2)
r_wall: sqrt(xwall^2+x1^2)
ct_exit: xwall/r_exit
rshock: (ct < ct_exit ? (abs(x1) > 0 ? (ct + sqrt(ct^2 + 3*st^2/2))/st^2 : 0.75) : r_exit)
norm_mag: 1/((1+(rshock*st)^2)^(1/2))
norm_x: norm_mag
norm_y: -norm_mag*rshock*st
vs: 0
uu_norm: uu*norm_x+vu*norm_y
Md: (uu_norm-vs)/cu
pd: pu*(1.0+((2.0*gamma)/(gamma+1.0))*(Md^2-1.0))
rhod: rhou*(((gamma+1.0)*Md^2)/((gamma-1.0)*Md^2+2.0))
ud_norm: vs+(rhou/rhod)*(uu_norm-vs)
RTd: pd/rhod
tan_x: -norm_y
tan_y: norm_x
uu_tan: uu*tan_x+vu*tan_y
ud_tan: uu_tan
ud: norm_x*ud_norm-norm_y*ud_tan
vd: norm_y*ud_norm+norm_x*ud_tan
#Velocity varies linearly to zero at cylinder wall: 
rfinal: (ct < ct_exit ? rshock : r_wall)
ud_use: ud*(r-R)/(rfinal-R)
vd_use: (x1 <0 ? -1 : 1)*vd*(r-R)/(rfinal-R)
#End of velocity vary (x=3): 
#Specifiy Wall temp: 
b1_ibc: symbolic
b1_ibc0: pd
b1_ibc1: ud_use
b1_ibc2: vd_use
b1_ibc3: RTd
# Name of mesh: 
b1_mesh: rstrt1_b1.grd
# Side type specifiers: 
b1_s7_hp_type: characteristic
b1_s7_r_dir: 0 0
b1_s7_ibc: symbolic
b1_s7_ibc0: pu
b1_s7_ibc1: uu
b1_s7_ibc2: vu
b1_s7_ibc3: RTu
#b1_s8_hp_type: wall
b1_s8_hp_typelist: 1 0 0 0
b1_s8_hp_type: plain
b1_s8_flux0: 0
b1_s8_type: circle
b1_s8_radius: 0.5
b1_s8_center: 2 0
b1_s8_ibc: symbolic
b1_s8_ibc0: pd
b1_s8_ibc1: 0
b1_s8_ibc2: 0
b1_s8_ibc3: RTd
b1_s3_type: coupled_symbolic_comm
b1_s3_h: x0-1.25-0.5*x1^2
b1_s3_dhdx0: 1
b1_s3_dhdx1: -x1
b1_s3_hp_type: shock
# Comment these to run flow only: 
b0_v1_hp_type: hp_deformable_free_pnt
b0_v2_hp_type: hp_deformable_free_pnt
b1_v1_hp_type: hp_deformable_free_pnt
b1_v2_hp_type: hp_deformable_free_pnt
b0_v1_wall_type: vertical
b0_v2_wall_type: vertical
b1_v1_wall_type: vertical
b1_v2_wall_type: vertical
# Uncomment these to run flow only: 
#b0_s3_type: symbolic
#b0_s3_hp_type: outflow_supersonic
#b1_s3_hp_type: inflow
#b1_s3_type: symbolic
