#polynomial order: 
log2p: 0
#petsc command line args: 
petsc: -ksp_type preonly -pc_type lu -pc_factor_mat_solver_type mumps
#Number of iterative cycles: 
ncycle: 30
debug_output: 0
rsdl_debug: 0
#Iterative tolerances: 
absolute_tolerance: 1.0e-7
relative_tolerance: 5.0e-7
#Number of time steps: 
ntstep: 1500
#Inverse time step: 
dtinv: (cu+uu)*20
# Name of file for output: 
logfile: output
# Number of mesh blocks for each processor: 
nblock: 1 1
# flag for mesh adaptation: 
adapt: 1
# Factor to increase memory allocation for mesh adaptation: 
growth factor: 10
#Physical properties: 
blocktype: cns
mesh_movement: coupled_deformable
#mu: 0.0013364
#mu: 6.682e-4
mu: 2e-3
#mu: 0
prandtl: 0.7
#prandtl: 1
# Initial and boundary condition function: 
#M: 17.636
#M: 3
M: 10
gamma: 1.4
rhou: 1.4
#uu: 17.636
#uu: 3
uu: 10
vu: 0
cu: uu/M
RTu: cu^2/gamma
pu: rhou*RTu
b0_ibc: symbolic
#Upstream props: 
b0_ibc0: pu
b0_ibc1: uu
b0_ibc2: vu
b0_ibc3: RTu
# Name of mesh: 
b0_mesh: rstrt1_b0.grd
# Side type specifiers: 
b0_s1_hp_type: inflow
#b0_s1_hp_type: characteristic
#b0_s2_hp_type: outflow_supersonic
b0_s2_hp_type: characteristic
b0_s2_r_dir: 0 0
b0_s3_type: coupled_symbolic_comm
b0_s3_h: x0-1.25-0.5*x1^2
b0_s3_dhdx0: 1
b0_s3_dhdx1: -x1
b0_s3_hp_type: shock
b0_s3_c0_indices: 
#b0_s4_hp_type: outflow_supersonic
b0_s4_hp_type: characteristic
b0_s4_r_dir: 0 0
b0_s5_hp_type: inflow
b0_s6_hp_type: inflow
#Downstream Props
norm_mag: 1/((1+x1^2)^(1/2))
norm_x: norm_mag*1
norm_y: -norm_mag*x1
vs: 0
uu_norm: uu*norm_x+vu*norm_y
Md: (uu_norm-vs)/cu
pd: pu*(1.0+((2.0*gamma)/(gamma+1.0))*(Md^2-1.0))
rhod: rhou*(((gamma+1.0)*Md^2)/((gamma-1.0)*Md^2+2.0))
ud_norm: vs+(rhou/rhod)*(uu_norm-vs)
RTd: pd/rhod
tan_x: norm_mag*x1
tan_y: norm_mag
uu_tan: uu*tan_x+vu*tan_y
ud_tan: uu_tan
ud: norm_x*ud_norm-norm_y*ud_tan
vd: norm_y*ud_norm+norm_x*ud_tan
#Try potential flow past cylinder
R: 0.5
U_pot: vs+(rhou/rhod)*(uu-vs)
r: ((2-x0)^2+x1^2)^(1/2)
theta: x0==2 ? _pi/2 : atan(x1/(2-x0))
vr: U_pot*(1-(R^2/r^2))*cos(theta)
vtheta: -U_pot*(1-(R^2/r^2))*sin(theta)
ud_pot: vr*cos(theta)-r*vtheta*sin(theta)
vd_pot: vr*sin(theta)+r*vtheta*cos(theta)
pd_pot: 0.5*rhod*(U_pot^2-(vr^2+vtheta^2))+pd
#Velocity varies linearly to zero at cylinder wall
theta: atan(x1/(2-x0))
r: ((2-x0)^2+x1^2)^(1/2)
rshock: x1!=0 ? (-cos(theta)+1)/(0.5*sin(theta)^2) : 1
ud_use: (ud/(rshock-R))*(r-R)
vd_use: (vd/(rshock-R))*(r-R)
#End of velocity vary (x=3)
theta_e: atan(x1/(2-2.5))
r_e: ((2-2.5)^2+x1^2)^(1/2)
rshock_e: x1!=0 ? (-cos(theta_e)+1)/(0.5*sin(theta_e)^2) : 1
ud_e: (ud/(rshock_e-R))*(r_e-R)
vd_e: (vd/(rshock_e-R))*(r_e-R)
#Specify Wall Temp
RT_cyl: 1.5/gamma
b1_ibc: symbolic
b1_ibc0: x0<5 ? x0<3 ? pd_pot : ((pu-pd_pot)/2)*(x0-3)+pd_pot : pu
b1_ibc1: x0<5 ? x0<3 ? ud_pot : ((uu-ud_pot)/2)*(x0-3)+ud_pot : uu
b1_ibc2: x0<5 ? x0<3 ? vd_pot : ((vu-vd_pot)/2)*(x0-3)+vd_pot : vu
b1_ibc3: x0<5 ? x0<3 ? RT_cyl : ((RTu-RT_cyl)/2)*(x0-3)+RT_cyl : RTu
#b1_ibc0: pd
#b1_ibc1: ud
#b1_ibc2: vd
#b1_ibc3: RTd
#b1_ibc0: pd
#b1_ibc1: x0<2.5 ? ud_use : ((uu-ud_e)/2.5)*(x0-2.5)+ud_e
#b1_ibc2: x0<2.5 ? x1>0 ? vd_use : -vd_use : x1>0 ? ((vu-vd_e)/2.5)*(x0-2.5)+vd_e : -#(((vu-vd_e)/2.5)*(x0-2.5)+vd_e)
#b1_ibc3: pd/rhod
b1_s8_ibc: symbolic
b1_s8_ibc0: pd_pot
b1_s8_ibc1: 0
b1_s8_ibc2: 0
b1_s8_ibc3: RT_cyl
#b1_s3_ibc: symbolic
#b1_s3_ibc0: pd
#b1_s3_ibc1: ud
#b1_s3_ibc2: x1<0 ? -vd : vd
#b1_s3_ibc3: RTd
# Name of mesh: 
b1_mesh: rstrt1_b1.grd
# Side type specifiers: 
#b1_s7_hp_type: outflow_supersonic
b1_s7_hp_type: characteristic
b1_s7_r_dir: 0 0
#b1_s8_hp_type: wall
b1_s8_hp_typelist: 1 0 0 0
b1_s8_hp_type: plain
b1_s8_flux0: 0
b1_s8_type: circle
b1_s8_radius: 0.5
b1_s8_center: 2 0
b1_s3_type: coupled_symbolic_comm
b1_s3_h: x0-1.25-0.5*x1^2
b1_s3_dhdx0: 1
b1_s3_dhdx1: -x1
b1_s3_hp_type: shock
b1_s3_c0_indices: 
b0_v1_hp_type: hp_deformable_free_pnt
b0_v2_hp_type: hp_deformable_free_pnt
b1_v1_hp_type: hp_deformable_free_pnt
b1_v2_hp_type: hp_deformable_free_pnt
b0_v1_wall_type: vertical
b0_v2_wall_type: vertical
b1_v1_wall_type: vertical
b1_v2_wall_type: vertical