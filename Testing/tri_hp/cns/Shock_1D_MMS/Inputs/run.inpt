#polynomial order: 
log2p: 2
b0_helper: l2error
b1_helper: l2error
#petsc command line args: 
petsc: -ksp_type preonly -pc_type lu -pc_factor_mat_solver_type mumps
#Number of iterative cycles: 
ncycle: 10
#Iterative tolerances: 
absolute_tolerance: 1.0e-10
relative_tolerance: 5.0e-10
rsdl_debug: 0
jac_debug: 0
debug_output: 0
extrapolate: 0
under_relaxation: 1
#Inverse time step:
dtinv: 5000
#Number of time steps: 
T: _pi/omegas
#ntstep: T*dtinv
ntstep: 3480
# Name of file for output: 
logfile: output
# Number of mesh blocks for each processor: 
nblock: 1 1
# flag for mesh adaptation: 
adapt: 0
# Factor to increase memory allocation for mesh adaptation: 
growth factor: 10
#Physical properties: 
blocktype: cns
mesh_movement: coupled_deformable
mu: 0
prandtl: 1
# Initial and boundary condition function: 
L: _pi/2
Mu_avg: 3
gamma: 1.4
pu_avg: 1
RTu_avg: 1
cu_avg: gamma^(1/2)
uu_avg: Mu_avg*cu_avg
rhou_avg: gamma*pu_avg/(cu_avg^2)
amps: 0.1*uu_avg
omegas: amps/(0.1*L)
amp: 0.1
vs: amps*sin(omegas*t)
xs: -(amps/omegas)*cos(omegas*t)
rhou: rhou_avg*(1.0+amp*sin(omegas*t))
Mu: Mu_avg*(1.0+amp*sin(omegas*t))
pu: pu_avg*(1.0+amp*sin(omegas*t))
cu: sqrt(gamma*pu/rhou)
uu: Mu*cu
RTu: pu/rhou
b0_ibc: symbolic
#Nondimesnional based on upstream props
b0_ibc0: pu
b0_ibc1: uu
b0_ibc2: 0
b0_ibc3: RTu
b0_src: symbolic
b0_src0: amp*omegas*rhou_avg*cos(omegas*t)
b0_src1: 2*Mu_avg*amp*omegas*rhou_avg*cos(omegas*t)*(amp*sin(omegas*t) + 1)*((gamma*pu_avg)/rhou_avg)^(1/2)
b0_src2: 0
b0_src3: amp*omegas*rhou_avg*cos(omegas*t)*(pu_avg/(rhou_avg*(gamma - 1)) + (Mu_avg^2*gamma*pu_avg*(amp*sin(omegas*t) + 1)^2)/(2*rhou_avg)) + Mu_avg^2*amp*gamma*omegas*pu_avg*cos(omegas*t)*(amp*sin(omegas*t) + 1)^2
# Name of mesh: 
b0_mesh: rstrt1_b0.grd
# Side type specifiers: 
b0_s1_hp_type: symmetry
b0_s1_dir: 1
b0_s1_r_dir: 1 1
b0_s2_type: coupled_symbolic_comm
b0_s2_h: x0-xs
b0_s2_dhdx0: 1
b0_s2_dhdx1: 0
b0_s2_hp_type: shock
b0_s2_c0_indices: 
b0_s3_hp_type: symmetry
b0_s3_dir: 1
b0_s3_r_dir: 1 1
b0_s4_hp_type: inflow
# IC downstream CHANGE
Md: (uu-vs)/cu
pd: pu*(1.0+((2.0*gamma)/(gamma+1.0))*(Md^2-1.0))
rhod: rhou*(((gamma+1.0)*Md^2)/((gamma-1.0)*Md^2+2.0))
ud: vs+(rhou/rhod)*(uu-vs)
RTd: pd/rhod
rhosd: rhod*(1+amp*sin((2*_pi/L)*(x0-xs)))
usd: ud*(1+amp*sin((2*_pi/L)*(x0-xs)))
psd: pd*(1+amp*sin((2*_pi/L)*(x0-xs)))
RTsd: psd/rhosd
b1_ibc: symbolic
b1_ibc0: psd
b1_ibc1: usd
b1_ibc2: 0
b1_ibc3: RTsd
ddt_psd: (omegas*pu_avg*cos(omegas*t)*((2*gamma*((rhou_avg*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))^2)/(gamma*pu_avg) - 1))/(gamma + 1) + 1))/10 + (4*rhou_avg*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))*(amps*omegas*cos(omegas*t) - (Mu_avg*omegas*cos(omegas*t)*((gamma*pu_avg)/rhou_avg)^(1/2))/10)*(sin(omegas*t)/10 + 1))/(gamma + 1)
ddt_rhosd: (omegas*rhou_avg^2*cos(omegas*t)*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))^2*(gamma + 1))/(10*gamma*pu_avg*((rhou_avg*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))^2*(gamma - 1))/(gamma*pu_avg) + 2)) + (2*rhou_avg^2*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))*(amps*omegas*cos(omegas*t) - (Mu_avg*omegas*cos(omegas*t)*((gamma*pu_avg)/rhou_avg)^(1/2))/10)*(sin(omegas*t)/10 + 1)*(gamma + 1))/(gamma*pu_avg*((rhou_avg*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))^2*(gamma - 1))/(gamma*pu_avg) + 2)) - (2*rhou_avg^3*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))^3*(amps*omegas*cos(omegas*t) - (Mu_avg*omegas*cos(omegas*t)*((gamma*pu_avg)/rhou_avg)^(1/2))/10)*(sin(omegas*t)/10 + 1)*(gamma - 1)*(gamma + 1))/(gamma^2*pu_avg^2*((rhou_avg*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))^2*(gamma - 1))/(gamma*pu_avg) + 2)^2)
ddt_vsd: amps*omegas*cos(omegas*t) - (2*(amps*omegas*cos(omegas*t) - (Mu_avg*omegas*cos(omegas*t)*((gamma*pu_avg)/rhou_avg)^(1/2))/10)*(gamma - 1))/(gamma + 1) + (gamma*pu_avg*((rhou_avg*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))^2*(gamma - 1))/(gamma*pu_avg) + 2)*(amps*omegas*cos(omegas*t) - (Mu_avg*omegas*cos(omegas*t)*((gamma*pu_avg)/rhou_avg)^(1/2))/10))/(rhou_avg*(amps*sin(omegas*t) - Mu_avg*(sin(omegas*t)/10 + 1)*((gamma*pu_avg)/rhou_avg)^(1/2))^2*(gamma + 1))
b1_src: symbolic
b1_src0: (amp*sin((2*_pi*(x0 - xs))/L) + 1)*ddt_rhosd - (2*amp*_pi*cos((2*_pi*(x0 - xs))/L)*rhod*vs)/L + (4*amp*_pi*cos((2*_pi*(x0 - xs))/L)*rhod*ud*(amp*sin((2*_pi*(x0 - xs))/L) + 1))/L
b1_src1: rhod*(amp*sin((2*_pi*(x0 - xs))/L) + 1)^2*ddt_vsd + ud*(amp*sin((2*_pi*(x0 - xs))/L) + 1)^2*ddt_rhosd + (2*amp*_pi*cos((2*_pi*(x0 - xs))/L)*pd)/L + (6*amp*_pi*cos((2*_pi*(x0 - xs))/L)*rhod*ud^2*(amp*sin((2*_pi*(x0 - xs))/L) + 1)^2)/L - (4*amp*_pi*cos((2*_pi*(x0 - xs))/L)*rhod*ud*(amp*sin((2*_pi*(x0 - xs))/L) + 1)*vs)/L
b1_src2: 0
b1_src3: (amp*sin((2*_pi*(x0 - xs))/L) + 1)*((ud^2*(amp*sin((2*_pi*(x0 - xs))/L) + 1)^2)/2 + pd/(rhod*(gamma - 1)))*ddt_rhosd + rhod*(amp*sin((2*_pi*(x0 - xs))/L) + 1)*(ud*(amp*sin((2*_pi*(x0 - xs))/L) + 1)^2*ddt_vsd + ddt_psd/(rhod*(gamma - 1)) - (pd*ddt_rhosd)/(rhod^2*(gamma - 1)) - (2*amp*_pi*cos((2*_pi*(x0 - xs))/L)*ud^2*(amp*sin((2*_pi*(x0 - xs))/L) + 1)*vs)/L) + (2*amp*_pi*cos((2*_pi*(x0 - xs))/L)*rhod*ud^3*(amp*sin((2*_pi*(x0 - xs))/L) + 1)^3)/L - (2*amp*_pi*cos((2*_pi*(x0 - xs))/L)*rhod*((ud^2*(amp*sin((2*_pi*(x0 - xs))/L) + 1)^2)/2 + pd/(rhod*(gamma - 1)))*vs)/L + (4*amp*_pi*cos((2*_pi*(x0 - xs))/L)*pd*ud*(amp*sin((2*_pi*(x0 - xs))/L) + 1))/L + (4*amp*_pi*cos((2*_pi*(x0 - xs))/L)*rhod*ud*(amp*sin((2*_pi*(x0 - xs))/L) + 1)*((ud^2*(amp*sin((2*_pi*(x0 - xs))/L) + 1)^2)/2 + pd/(rhod*(gamma - 1))))/L
# Name of mesh: 
b1_mesh: rstrt1_b1.grd
# Side type specifiers: 
b1_s5_hp_type: symmetry
b1_s5_dir: 1
b1_s5_r_dir: 1 1
b1_s6_hp_type: characteristic
b1_s7_hp_type: symmetry
b1_s7_dir: 1
b1_s7_r_dir: 1 1
b1_s2_type: coupled_symbolic_comm
b1_s2_h: x0-xs
b1_s2_dhdx0: 1
b1_s2_dhdx1: 0
b1_s2_hp_type: shock
b1_s2_c0_indices: 
b0_v1_hp_type: hp_deformable_free_pnt
b0_v2_hp_type: hp_deformable_free_pnt
b1_v1_hp_type: hp_deformable_free_pnt
b1_v2_hp_type: hp_deformable_free_pnt
b0_v1_wall_type: horizontal
b0_v2_wall_type: horizontal
b1_v1_wall_type: horizontal
b1_v2_wall_type: horizontal